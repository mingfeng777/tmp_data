# Parameters: <subdir>
define subdir
  $(call warn,$(1),d,D $(1))
  $(foreach bd,$($(1)/builddirs),
    $(call warn,$(1),d,BD $(1)/$(bd))
    $(foreach target,$(SUBTARGETS) $($(1)/subtargets),
      $(foreach btype,$(buildtypes-$(bd)),
        $(call warn_eval,$(1)/$(bd),t,T,$(1)/$(bd)/$(btype)/$(target): $(if $(NO_DEPS)$(QUILT),,$($(1)/$(bd)/$(btype)/$(target)) $(call $(1)//$(btype)/$(target),$(1)/$(bd)/$(btype))))
                  $(call log_make,$(1)/$(bd),$(target),$(btype),$(filter-out __default,$(variant))) \
                        || $(call ERROR,$(2),   ERROR: $(1)/$(bd) [$(btype)] failed to build.,$(findstring $(bd),$($(1)/builddirs-ignore-$(btype)-$(target))))
        $(if $(call diralias,$(bd)),$(call warn_eval,$(1)/$(bd),l,T,$(1)/$(call diralias,$(bd))/$(btype)/$(target): $(1)/$(bd)/$(btype)/$(target)))
      )
      $(call warn_eval,$(1)/$(bd),t,T,$(1)/$(bd)/$(target): $(if $(NO_DEPS)$(QUILT),,$($(1)/$(bd)/$(target)) $(call $(1)//$(target),$(1)/$(bd))))
        $(foreach variant,$(if $(BUILD_VARIANT),$(BUILD_VARIANT),$(if $(strip $($(1)/$(bd)/variants)),$($(1)/$(bd)/variants),$(if $($(1)/$(bd)/default-variant),$($(1)/$(bd)/default-variant),__default))),
                        $(if $(BUILD_LOG),@mkdir -p $(BUILD_LOG_DIR)/$(1)/$(bd)/$(filter-out __default,$(variant)))
                        $(if $($(1)/autoremove),$(call rebuild_check,$(1)/$(bd),$(target),,$(filter-out __default,$(variant))))
                        $(call log_make,$(1)/$(bd),$(target),,$(filter-out __default,$(variant))) \
                                || $(call ERROR,$(1),   ERROR: $(1)/$(bd) failed to build$(if $(filter-out __default,$(variant)), (build variant: $(variant))).,$(findstring $(bd),$($(1)/builddirs-ignore-$(target))))
        )
      $(if $(PREREQ_ONLY)$(DUMP_TARGET_DB),,
        # aliases
        $(if $(call diralias,$(bd)),$(call warn_eval,$(1)/$(bd),l,T,$(1)/$(call diralias,$(bd))/$(target): $(1)/$(bd)/$(target)))
          )
        )
  )
  $(foreach target,$(SUBTARGETS) $($(1)/subtargets),$(call subtarget,$(1),$(target)))
endef


# Parameters: <subdir> <name> <target> <depends> <config options> <stampfile location>
define stampfile
  $(1)/stamp-$(3):=$(if $(6),$(6),$(STAGING_DIR))/stamp/.$(2)_$(3)$(5)
  $$($(1)/stamp-$(3)): $(TMP_DIR)/.build $(4)
        @+$(SCRIPT_DIR)/timestamp.pl -n $$($(1)/stamp-$(3)) $(1) $(4) || \
                $(MAKE) $(if $(QUIET),--no-print-directory) $$($(1)/flags-$(3)) $(1)/$(3)
        @mkdir -p $$$$(dirname $$($(1)/stamp-$(3)))
        @touch $$($(1)/stamp-$(3))

  $$(if $(call debug,$(1),v),,.SILENT: $$($(1)/stamp-$(3)))

  .PRECIOUS: $$($(1)/stamp-$(3)) # work around a make bug

  $(1)//clean:=$(1)/stamp-$(3)/clean
  $(1)/stamp-$(3)/clean: FORCE
        @rm -f $$($(1)/stamp-$(3))

endef

--------------------------------------------------
在target/Makefile內
curdir:=target

$(eval $(call stampfile,$(curdir),target,prereq,.config))
$(eval $(call stampfile,$(curdir),target,compile,$(TMP_DIR)/.build))
$(eval $(call stampfile,$(curdir),target,install,$(TMP_DIR)/.build))

$(eval $(call subdir,$(curdir)))
將eval換成info拆解看運行什麼

拆解一: $(info $(call stampfile,$(curdir),target,prereq,.config))後
  target/stamp-prereq:=/home/minfeng/openwrt/staging_dir/target-aarch64_cortex-a72_musl/stamp/.target_prereq
  $(target/stamp-prereq): /home/minfeng/openwrt/tmp/.build .config
        @+/home/minfeng/openwrt/scripts/timestamp.pl -n $(target/stamp-prereq) target .config || make --no-print-directory $(target/flags-prereq) target/prereq
        @mkdir -p $$(dirname $(target/stamp-prereq))
        @touch $(target/stamp-prereq)

  $(if ,,.SILENT: $(target/stamp-prereq))

  .PRECIOUS: $(target/stamp-prereq) # work around a make bug

  target//clean:=target/stamp-prereq/clean
  target/stamp-prereq/clean: FORCE
        @rm -f $(target/stamp-prereq)

拆解二: $(info $(call stampfile,$(curdir),target,compile,$(TMP_DIR)/.build))後
  target/stamp-compile:=/home/minfeng/openwrt/staging_dir/target-aarch64_cortex-a72_musl/stamp/.target_compile
  $(target/stamp-compile): /home/minfeng/openwrt/tmp/.build /home/minfeng/openwrt/tmp/.build
        @+/home/minfeng/openwrt/scripts/timestamp.pl -n $(target/stamp-compile) target /home/minfeng/openwrt/tmp/.build || make --no-print-directory $(target/flags-compile) target/compile
        @mkdir -p $$(dirname $(target/stamp-compile))
        @touch $(target/stamp-compile)

  $(if ,,.SILENT: $(target/stamp-compile))

  .PRECIOUS: $(target/stamp-compile) # work around a make bug

  target//clean:=target/stamp-compile/clean
  target/stamp-compile/clean: FORCE
        @rm -f $(target/stamp-compile)

拆解三: $(info $(call stampfile,$(curdir),target,install,$(TMP_DIR)/.build))後
  target/stamp-install:=/home/minfeng/openwrt/staging_dir/target-aarch64_cortex-a72_musl/stamp/.target_install
  $(target/stamp-install): /home/minfeng/openwrt/tmp/.build /home/minfeng/openwrt/tmp/.build
        @+/home/minfeng/openwrt/scripts/timestamp.pl -n $(target/stamp-install) target /home/minfeng/openwrt/tmp/.build || make --no-print-directory $(target/flags-install) target/install
        @mkdir -p $$(dirname $(target/stamp-install))
        @touch $(target/stamp-install)

  $(if ,,.SILENT: $(target/stamp-install))

  .PRECIOUS: $(target/stamp-install) # work around a make bug

  target//clean:=target/stamp-install/clean
  target/stamp-install/clean: FORCE
        @rm -f $(target/stamp-install)

拆解四: $(info $(call subdir,$(curdir)))後
      target/linux/prereq:
             @+  /home/minfeng/openwrt/scripts/time.pl "time: target/linux/prereq" $(SUBMAKE) -r -C target/linux BUILD_SUBDIR="target/linux" BUILD_VARIANT="" prereq  ||     (    printf "%s\n" "    ERROR: target/linux failed to build.";   exit 1;)

      target/linux/install:
             @+  /home/minfeng/openwrt/scripts/time.pl "time: target/linux/install" $(SUBMAKE) -r -C target/linux BUILD_SUBDIR="target/linux" BUILD_VARIANT="" install  ||   (    printf "%s\n" "    ERROR: target/linux failed to build.";   exit 1;)

      target/sdk/prereq:
             @+  /home/minfeng/openwrt/scripts/time.pl "time: target/sdk/prereq" $(SUBMAKE) -r -C target/sdk BUILD_SUBDIR="target/sdk" BUILD_VARIANT="" prereq  ||   (    printf "%s\n" "    ERROR: target/sdk failed to build.";   exit 1;)

      target/sdk/install: target/linux/install
             @+  /home/minfeng/openwrt/scripts/time.pl "time: target/sdk/install" $(SUBMAKE) -r -C target/sdk BUILD_SUBDIR="target/sdk" BUILD_VARIANT="" install  ||         (    printf "%s\n" "    ERROR: target/sdk failed to build.";   exit 1;)

      target/imagebuilder/prereq:
             @+  /home/minfeng/openwrt/scripts/time.pl "time: target/imagebuilder/prereq" $(SUBMAKE) -r -C target/imagebuilder BUILD_SUBDIR="target/imagebuilder" BUILD_VARIANT="" prereq  ||        (    printf "%s\n" "    ERROR: target/imagebuilder failed to build.";   exit 1;)

      target/imagebuilder/install: target/linux/install
             @+  /home/minfeng/openwrt/scripts/time.pl "time: target/imagebuilder/install" $(SUBMAKE) -r -C target/imagebuilder BUILD_SUBDIR="target/imagebuilder" BUILD_VARIANT="" install  ||      (    printf "%s\n" "    ERROR: target/imagebuilder failed to build.";   exit 1;)

      target/toolchain/prereq:
             @+  /home/minfeng/openwrt/scripts/time.pl "time: target/toolchain/prereq" $(SUBMAKE) -r -C target/toolchain BUILD_SUBDIR="target/toolchain" BUILD_VARIANT="" prereq  ||         (    printf "%s\n" "    ERROR: target/toolchain failed to build.";   exit 1;)

      target/toolchain/install:
             @+  /home/minfeng/openwrt/scripts/time.pl "time: target/toolchain/install" $(SUBMAKE) -r -C target/toolchain BUILD_SUBDIR="target/toolchain" BUILD_VARIANT="" install  ||       (    printf "%s\n" "    ERROR: target/toolchain failed to build.";   exit 1;)

   target/prereq:  target/linux/prereq
   target/install:  target/linux/install


subdir function 主要產生子目錄下的各個目錄的規則，產生的規則還會根據是否是prereq而動態增減規則，上面印出來的是stage 1時的規則。
stage 1運行到中間切過去stage 2時運行prereq後要回到stage1，上面印的時間點就是stage1切過去stage2後所產生的規則!!!!(非常重要，因為這時間點看不到其他rules，比如compile)




